version: "3.5"

services:
    blackfire:
        container_name: "blackfire"
        image: "blackfire/blackfire"
        environment:
            - BLACKFIRE_SERVER_ID=4cfe9064-5b22-4f76-8570-6955e95d1d61
            - BLACKFIRE_SERVER_TOKEN=c6031d1c9fc5c3e47d537db7a97ea413be2a4fb4f760130a01716f01d611b667
            - BLACKFIRE_CLIENT_ID=6d884a28-d05d-41bc-be30-be60eb9444e4
            - BLACKFIRE_CLIENT_TOKEN=2a38ddb676a90d9ff99d89bb83e31c13af910d4b93c4290b098655f7cab1a5bb
        networks:
            - "vanilla_network"
    httpd:
        build:
            context: "./images/httpd"
        container_name: "httpd"
        depends_on:
            - "php-fpm"
        networks:
            - "vanilla_network"
        ports:
            - "9080:9080"
            - "9443:9443"
        volumes:
            - "shared:/shared" # allow to use the php-fpm socket
            - "./logs/httpd:/var/log/httpd:delegated"
            - "./resources/certificates:/certificates:cached"
            - "./resources/usr/local/apache2/conf.d:/usr/local/apache2/conf.d:cached"
            - "../:/srv/vanilla-repositories:cached"

    nginx:
        build:
            context: "./images/nginx"
        # Transform the template into an actual file
        command: /bin/bash -c "envsubst < /etc/nginx/fastcgi.conf.tpl > /etc/nginx/fastcgi.conf && nginx -g 'daemon off;'"
        container_name: "nginx"
        depends_on:
            - "php-fpm"
        environment:
            - "DOLLAR=$$"
            - "FASTCGI_SPLIT_PATH_INFO=${VANILLA_DOCKER_FASTCGI_SPLIT_PATH_INFO}"
            - "FASTCGI_INTERCEPT_ERRORS=${VANILLA_DOCKER_FASTCGI_INTERCEPT_ERRORS}"
            - "FASTCGI_IGNORE_CLIENT_ABORT=${VANILLA_DOCKER_FASTCGI_IGNORE_CLIENT_ABORT}"
            - "FASTCGI_CONNECT_TIMEOUT=${VANILLA_DOCKER_FASTCGI_CONNECT_TIMEOUT}"
            - "FASTCGI_SEND_TIMEOUT=${VANILLA_DOCKER_FASTCGI_SEND_TIMEOUT}"
            - "FASTCGI_READ_TIMEOUT=${VANILLA_DOCKER_FASTCGI_READ_TIMEOUT}"
            - "FASTCGI_BUFFER_SIZE=${VANILLA_DOCKER_FASTCGI_BUFFER_SIZE}"
            - "FASTCGI_BUFFERS=${VANILLA_DOCKER_FASTCGI_BUFFERS}"
            - "FASTCGI_BUSY_BUFFERS_SIZE=${VANILLA_DOCKER_FASTCGI_BUSY_BUFFERS_SIZE}"
            - "FASTCGI_TEMP_FILE_WRITE_SIZE=${VANILLA_DOCKER_FASTCGI_TEMP_FILE_WRITE_SIZE}"
        networks:
            vanilla_network:
                aliases: # Allows (sso|dev).vanilla.localhost to be resolved internally from php-fpm
                    - "sso.vanilla.localhost"
                    - "dev.vanilla.localhost"
                    - "colonize.localhost"
                    - "vanilla.test"
                    - "vanillafactory.spawn"
        ports:
            - "80:80"
            - "8080:8080"
            - "443:443"
        volumes:
            - "shared:/shared" # allow to use the php-fpm socket
            - "./logs/nginx:/var/log/nginx:delegated"
            - "./resources/certificates:/certificates:cached"
            - "./resources/etc/nginx/conf.d:/etc/nginx/conf.d:cached"
            - "./resources/etc/nginx/sites-available:/etc/nginx/sites-available:cached"
            - "./resources/etc/nginx/sites-enabled:/etc/nginx/sites-enabled:cached"
            - "../:/srv/vanilla-repositories:cached"
    proxy:
        build:
            context: "./images/nginx"
        # Transform the template into an actual file
        command: /bin/bash -c "envsubst < /etc/nginx/fastcgi.conf.tpl > /etc/nginx/fastcgi.conf && nginx -g 'daemon off;'"
        container_name: "reverse-proxy"
        depends_on:
            - "php-fpm"
        environment:
            - "DOLLAR=$$"
            - "FASTCGI_SPLIT_PATH_INFO=${VANILLA_DOCKER_FASTCGI_SPLIT_PATH_INFO}"
            - "FASTCGI_INTERCEPT_ERRORS=${VANILLA_DOCKER_FASTCGI_INTERCEPT_ERRORS}"
            - "FASTCGI_IGNORE_CLIENT_ABORT=${VANILLA_DOCKER_FASTCGI_IGNORE_CLIENT_ABORT}"
            - "FASTCGI_CONNECT_TIMEOUT=${VANILLA_DOCKER_FASTCGI_CONNECT_TIMEOUT}"
            - "FASTCGI_SEND_TIMEOUT=${VANILLA_DOCKER_FASTCGI_SEND_TIMEOUT}"
            - "FASTCGI_READ_TIMEOUT=${VANILLA_DOCKER_FASTCGI_READ_TIMEOUT}"
            - "FASTCGI_BUFFER_SIZE=${VANILLA_DOCKER_FASTCGI_BUFFER_SIZE}"
            - "FASTCGI_BUFFERS=${VANILLA_DOCKER_FASTCGI_BUFFERS}"
            - "FASTCGI_BUSY_BUFFERS_SIZE=${VANILLA_DOCKER_FASTCGI_BUSY_BUFFERS_SIZE}"
            - "FASTCGI_TEMP_FILE_WRITE_SIZE=${VANILLA_DOCKER_FASTCGI_TEMP_FILE_WRITE_SIZE}"
        networks:
            vanilla_network:
                aliases: # Allows (sso|dev).vanilla.localhost to be resolved internally from php-fpm
                    - "proxy"
        ports:
            - "81:80"
        volumes:
            - "shared:/shared" # allow to use the php-fpm socket
            - "./logs/proxy:/var/log/nginx:delegated"
            - "./resources/etc/proxy/conf.d:/etc/nginx/conf.d:cached"
            - "./resources/etc/proxy/sites-available:/etc/nginx/sites-available:cached"
            - "./resources/etc/proxy/sites-enabled:/etc/nginx/sites-enabled:cached"
            - "../:/srv/vanilla-repositories:cached"

    # Don't forget to update docker-compose.unit-test.yml
    php-fpm:
        build:
            context: "./images/php-fpm"
        container_name: "php-fpm"
        environment:
            - BLACKFIRE_CLIENT_ID=6d884a28-d05d-41bc-be30-be60eb9444e4
            - BLACKFIRE_CLIENT_TOKEN=2a38ddb676a90d9ff99d89bb83e31c13af910d4b93c4290b098655f7cab1a5bb
            - "PHP_INI_SCAN_DIR=:/usr/local/etc/php/custom.conf.d" # Allow users to override configs
            - "TEST_BASEURL"
            - "TEST_DB_HOST=database"
            - "TEST_DB_NAME=vanilla_test"
            - "TEST_DB_USER=travis"
            - "TEST_DB_PASSWORD=travis"
        networks:
            - "vanilla_network"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - "shared:/shared" # expose php-fpm socket
            - "./logs/php-fpm:/var/log/php-fpm:delegated"
            - "./resources/certificates:/usr/local/share/ca-certificates:cached" # Mount extra certificates
            - "./resources/sphinx:/sphinx:cached" # expose sphinx API. We have to do this here because we need to be enable to update the plugin before we can start the container.
            - "./resources/usr/local/etc/php/conf.d:/usr/local/etc/php/custom.conf.d:cached"
            - "../:/srv/vanilla-repositories:delegated"
    memcached:
            build:
                context: "./images/memcached"
            networks:
                - "vanilla_network"
            container_name: memcached

    sphinx:
        build:
            context: "./images/sphinx"
        container_name: sphinx
        networks:
            - "vanilla_network"
        volumes:
            - "./logs/sphinx:/var/log/sphinx:delegated"
            - "./resources/usr/local/etc/sphinx/conf.d:/usr/local/etc/sphinx/conf.d:cached"
            - "./resources/usr/local/etc/sphinx/configs-available/:/usr/local/etc/sphinx/configs-available/:cached"
#        ports:
#            - "9306:9306"
#            - "9312:9312"
#            - "9399:9399"
#    crond:
#        build:
#            context: "./images/cron"
#        container_name: crond
#        privileged: true
#        networks:
#            - "vanilla_network"
#        volumes:
#            - "./logs/crond:/var/log/sphinx:delegated"
#            - /var/run/docker.sock:/var/run/docker.sock
volumes:
    shared:

networks:
    vanilla_network:
        driver: "bridge"
        name: "vanilla_network"
